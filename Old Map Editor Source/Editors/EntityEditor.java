/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Editors;

import Build.Entity;
import Build.Skin;
import Tools.Rectangle;
import dingo.Editor;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Enumeration;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author James
 */
public class EntityEditor extends javax.swing.JPanel {
    private Editor editor;
    private Entity entity;
    /**
     * Creates new form EntityEditor
     * @param aThis
     */
    public EntityEditor(Editor aThis) {
        initComponents();
        ID.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                changeActionPerformed(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                changeActionPerformed(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        editor = aThis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        xCoord = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        yCoord = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        skins = new javax.swing.JComboBox();
        ID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        mass = new javax.swing.JSpinner();
        doorTarget = new javax.swing.JCheckBox();
        active = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        userData = new javax.swing.JSpinner();
        view = new Tools.ImagePanel();

        jLabel1.setText("X Coordinate:");

        xCoord.setForeground(new java.awt.Color(0, 0, 255));
        xCoord.setText("0");

        jLabel2.setText("Y Coordinate:");

        yCoord.setForeground(new java.awt.Color(0, 0, 255));
        yCoord.setText("0");

        jLabel3.setText("Skin:");

        skins.setToolTipText("");

        jLabel4.setText("Mass:");

        mass.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        mass.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                massPropertyChange(evt);
            }
        });

        doorTarget.setText("Door Target?");
        doorTarget.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                doorTargetPropertyChange(evt);
            }
        });

        active.setSelected(true);
        active.setText("Active?");
        active.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                activePropertyChange(evt);
            }
        });

        jLabel5.setText("User Data:");

        userData.setModel(new javax.swing.SpinnerNumberModel());
        userData.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userDataPropertyChange(evt);
            }
        });

        view.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout viewLayout = new javax.swing.GroupLayout(view);
        view.setLayout(viewLayout);
        viewLayout.setHorizontalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        viewLayout.setVerticalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ID)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xCoord))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(skins, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yCoord)))
                        .addGap(0, 57, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mass, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(active))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userData, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(doorTarget))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(mass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(active))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(xCoord)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(userData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doorTarget)
                    .addComponent(yCoord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(skins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userDataPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userDataPropertyChange
        // TODO add your handling code here:
        if (entity != null) {
            entity.setUd((Integer) userData.getValue());
        }
    }//GEN-LAST:event_userDataPropertyChange

    private void massPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_massPropertyChange
        // TODO add your handling code here:
        if (entity != null) {
            entity.setMass((Integer) mass.getValue());
        }
    }//GEN-LAST:event_massPropertyChange

    private void activePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_activePropertyChange
        // TODO add your handling code here:
        if (entity != null) {
            entity.setActive(active.isSelected());
        }
    }//GEN-LAST:event_activePropertyChange

    private void doorTargetPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_doorTargetPropertyChange
        // TODO add your handling code here:
        if (entity != null) {
            entity.setDoor(doorTarget.isSelected());
        }
    }//GEN-LAST:event_doorTargetPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID;
    private javax.swing.JCheckBox active;
    private javax.swing.JCheckBox doorTarget;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner mass;
    private javax.swing.JComboBox skins;
    private javax.swing.JSpinner userData;
    private Tools.ImagePanel view;
    private javax.swing.JLabel xCoord;
    private javax.swing.JLabel yCoord;
    // End of variables declaration//GEN-END:variables

    public void setEntity(Entity en){
        entity = en;
        skins.removeAllItems();
        for (ItemListener itemListener : skins.getItemListeners()) {
            skins.removeItemListener(itemListener);
        }
        Enumeration e = editor.getSkins().children();
        while (e.hasMoreElements()) {
            Skin nextElement = ((Skin)((DefaultMutableTreeNode)e.nextElement()).getUserObject());
            skins.addItem(nextElement);
        }
        try {
            skins.setSelectedItem(en.getSkin());
            xCoord.setText(Integer.toString(entity.getX()));
            yCoord.setText(Integer.toString(entity.getY()));
            doorTarget.setSelected(entity.getDoor());
            active.setSelected(entity.getActive());
            ID.setText(entity.getID());
            mass.setValue(entity.getMass());
            userData.setValue(entity.getUd());
        } catch (NullPointerException ex) {}
        if (entity.getSkin() == null) {
            skins.setSelectedIndex(0);
            entity.setSkin((Skin) skins.getSelectedItem());
        } else {
            skins.setSelectedItem(entity.getSkin());
        }
        skins.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                skinsItemStateChanged(e);
            }
        });
        updateView();
    }
    
    public void skinsItemStateChanged(ItemEvent evt){
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Skin sk = (Skin)evt.getItem();
            entity.setSkin(sk);
            updateView();
        }
    }
    
    public void updateView(){
        if (entity != null) {
            view.setImage(entity.getSkin().getImg().getImg());
            Rectangle rec = entity.getSkin().getRec().get(0);
            view.crop(rec.getX(), rec.getY(), rec.getW(), rec.getH());
        }
    }
    
    public void changeActionPerformed(DocumentEvent evt){
        try {
            entity.setID(ID.getText());
            editor.getTreeModel().reload();
            editor.getAssets().expandRow(5);
        } catch (NullPointerException e) {}
    }

    public void setCoords(int i, int i0) {
        xCoord.setText(Integer.toString(i));
        yCoord.setText(Integer.toString(i0));
    }
}
